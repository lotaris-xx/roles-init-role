- block:
    - name: Discover any role requirements
      ansible.builtin.find:
        patterns:
          - roledep.yml
        paths:
          - "{{ playbook_dir }}/roles"
        recurse: true
        depth: 2
      register: t_roledeps

    - name: Install all role requirements with SSH key from environment
      ansible.builtin.command:
        cmd: ansible-galaxy role install -r {{ requirements_path }} -p {{ role_dest_path }}
      vars:
        requirements_path: "{{ item.path }}"
        role_dest_path: "{{ playbook_dir }}/roles"
      environment:
        GIT_SSH_COMMAND: 'ssh -o StrictHostKeyChecking=no -i $GIT_SSH_KEY_FILE'
      register: t_galaxy_install
      loop: "{{ t_roledeps.files }}"
      when: lookup('env', 'GIT_SSH_KEY_FILE')

    - name: Install all role requirements with no ssh key or key from ssh-add
      ansible.builtin.command:
        cmd: ansible-galaxy role install -r {{ requirements_path }} -p {{ role_dest_path }}
      vars:
        requirements_path: "{{ item.path }}"
        role_dest_path: "{{ playbook_dir }}/roles"
      environment:
        GIT_SSH_COMMAND: 'ssh -o StrictHostKeyChecking=no -i $GIT_SSH_KEY_FILE'
      register: t_galaxy_install
      loop: "{{ t_roledeps.files }}"
      when: not lookup('env', 'GIT_SSH_KEY_FILE')

    - name: Grab a new list of dependencies
      ansible.builtin.find:
        patterns:
          - roledep.yml
        paths:
          - "{{ playbook_dir }}/roles"
        recurse: true
        depth: 2
      register: t_roledeps_new

    - name: Call this tasks file again if we have more roledeps
      ansible.builtin.include_tasks:
        file: roledeps.yml
      when: ( t_roledeps.matched != t_roledeps_new.matched ) |bool

  delegate_to: localhost
